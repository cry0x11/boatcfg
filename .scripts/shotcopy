#!/bin/bash
#
# TODO: prevent overriding

# If cache directory does not exist, create one
[ ! -d ~/.cache/boatcfg/scripts ] && mkdir -p ~/.cache/boatcfg/scripts

source ~/.scripts/cmdfns

function menu () { 
    #add fzf menu here 
}
function notifyShot () { notify-send "Shotcopy: screenshot" "$@"; }
function notifyVideo () { notify-send "Shotcopy: video recording" "$@"; }


case $1 in
    "shot")
        case $2 in
            "copy")
                region=`slurp`
                if [ -n "$region" ]; then
                    grim -g "$region" - | wl-copy
                    notifyShot "\n<u><b>Copied screenshot to clipboard</u></b>"
                else
                    notifyShot "\n<u><b>No region provided so didn't take screenshot</u></b>"
                fi
                ;;

            "region")
                region=`slurp`
                if [ -n "$region" ]; then 
                    grim -g "$region" ~/.cache/boatcfg/scripts/screenshot.png
                    menu
                    if [ -n "$name" ]; then
                        mv ~/.cache/boatcfg/scripts/screenshot.png ~/Pictures/"$name".png
                        notifyShot "\n<u><b>Took screenshot</b></u>\n\n<b>~/Pictures/$name.png</b>"
                    else
                        datename=`date +'%Y%m%d-%H%M%p-screenshot-region'`
                        mv ~/.cache/boatcfg/scripts/screenshot.png ~/Pictures/"$datename".png
                        notifyShot "\n<b><u>Took screenshot</u></b>\n\n<b>Used date because no name was provided</b>\n\n<b>~/Pictures/$datename.png</b>"
                    fi
                else
                    notifyShot "\n<u><b>No region provided so didn't take screenshot</b></u>"
                fi
                ;;

            "full")
                grim ~/.cache/boatcfg/scripts/screenshot.png
                menu
                if [ -n "$name" ]; then
                    mv ~/.cache/boatcfg/scripts/screenshot.png ~/Pictures/"$name".png
                    notifyShot "\n<u><b>Took screenshot</b></u>\n\n<b>~/Pictures/$name.png</b>"
                else
                    datename=`date +'%Y%m%d-%H%M%S%p-screenshot-full'`
                    mv ~/.cache/boatcfg/scripts/screenshot.png ~/Pictures/"$datename".png
                    notifyShot "\n<b><u>Took screenshot</u></b>\n\n<b>Used date because no name was provided</b>\n\n<b>~/Pictures/$datename.png</b>"
                fi
                ;;
           
            *)
                notifyShot "\n<b>'$2': <u>Invalid argument</u></b>\n\n<b>One of 'copy', 'region' or 'full' were expected</b>"
                ;;
            esac
            ;;


    "rec")
        # name of device below will be used as an audio device for screen recording
        device_name="alsa_output.pci-0000_00_1b.0.analog-stereo.monitor"
        case $2 in
            "region")
                if [ -f ~/.cache/boatcfg/scripts/recorder.lock ]; then
                    notifyVideo "\n<u><b>Script wasn't made to be run concurrently</b></u>"
                else
                    region=`slurp`
                    if [ -n "$region" ]; then 
                        echo "region" > ~/.cache/boatcfg/scripts/recorder.lock
                        eww update rev_recording=true
                        notifyVideo "\n<u><b>Region video recording started</b></u>"
                        wf-recorder -x yuv420p                  \
                                    --audio="$device_name"      \
                                    -g "$region"                \
                                    -f ~/.cache/boatcfg/scripts/recording.mp4
                    else
                        notifyVideo "\n<u><b>No region provided so didn't record video</b></u>"
                    fi
                fi
                ;;

            "full")
                if [ -f ~/.cache/boatcfg/scripts/recorder.lock ]; then
                    notifyVideo "\n<u><b>Script wasn't made to be run concurrently</b></u>"
                else
                    echo "fullscreen" > ~/.cache/boatcfg/scripts/recorder.lock
                    eww update rev_recording=true
                    notifyVideo "\n<u><b>Fullscreen video recording started</b></u>"
                    wf-recorder -x yuv420p                  \
                                --audio="$device_name"      \
                                -f ~/.cache/boatcfg/scripts/recording.mp4
                fi
                ;;

            "stop")
                if [ -f ~/.cache/boatcfg/scripts/recorder.lock ]; then
                    kill -s SIGINT `pgrep wf-recorder`
                    eww update rev_recording=false
                    menu
                    if [ -n "$name" ]; then
                        mv ~/.cache/boatcfg/scripts/recording.mp4 ~/Videos/"$name".mp4
                        notifyVideo "\n<b><u>Video recording stopped</u></b>\n\n<b>~/Videos/$name.mp4</b>"
                    else
                        recType=`cat ~/.cache/boatcfg/scripts/recorder.lock`
                        datename=`date +'%Y%m%d-%H%M%S%p-video'`
                        mv ~/.cache/boatcfg/scripts/recording.mp4 ~/Videos/"${datename}-$recType".mp4
                        notifyVideo "\n<b><u>Video recording stopped</u></b>\n\n<b>Used date because no name was provided</b>\n\n<b>~/Videos/${datename}-$recType.mp4</b>"
                    fi
                    rm ~/.cache/boatcfg/scripts/recorder.lock
                else
                    notifyVideo "\n<b><u>Not even running to be stopped</u></b>"
                fi
                ;;
            *)
                notifyVideo "\n<b>'$2': <u>Invalid argument</u></b>\n\n<b>One of 'full', 'region' or 'stop' were expected</b>"
                ;;
        esac
        ;;
    *)
        notify-send "Shotcopy" \
                    "\n<b>'$1': <u>Invalid argument</u></b>\n\n<b>Either 'shot' or 'rec' were expected</b>"
        ;;
esac
